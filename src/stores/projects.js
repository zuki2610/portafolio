import { defineStore } from 'pinia'
import { getProjects as fetchProjects, getProjectById as fetchProjectById } from '../services/api.js'

export const useProjectsStore = defineStore('projects', {
  state: () => ({
    loading: false,
    error: null,
    projects: [
      {
        id: 'odoo-konos-implementation',
        title: 'Implementaci√≥n Odoo en Konos',
        category: 'Odoo Development',
        description: 'Sistema integral de gesti√≥n empresarial implementado con Odoo para optimizar procesos administrativos, contables y de recursos humanos.',
        icon: 'üè¢',
        date: '2024',
        technologies: ['Odoo', 'Python', 'PostgreSQL', 'Shell', 'Docker'],
        featured: true,
        details: {
          client: 'Konos',
          duration: 'En curso',
          technologies: ['Odoo v15', 'Odoo v16', 'Odoo v17', 'Python', 'PostgreSQL', 'Shell Script', 'Docker'],
          challenges: [
            'Migraci√≥n entre versiones de Odoo',
            'Optimizaci√≥n de performance',
            'Customizaci√≥n de m√≥dulos est√°ndar',
            'Automatizaci√≥n de procesos',
            'Integraci√≥n con sistemas legacy'
          ],
          solution: 'Desarrollo de un sistema modular y escalable que permite gesti√≥n integral de la empresa, incluyendo m√≥dulos personalizados y migraci√≥n fluida entre versiones.',
          results: [
            'Reducci√≥n del 40% en tiempo de procesos administrativos',
            'Automatizaci√≥n completa de reportes',
            'Sistema escalable y mantenible',
            'Mejora en la toma de decisiones basada en datos'
          ],
          gallery: [
            { type: 'image', url: '#' },
            { type: 'image', url: '#' }
          ]
        }
      },
      {
        id: 'frontend-portfolio',
        title: 'Portafolio Digital Interactivo',
        category: 'Frontend Development',
        description: 'Portafolio web moderno desarrollado con Vue.js, Vue Router y Vuex. Dise√±o responsivo con animaciones interactivas inspiradas en interfaces futuristas.',
        icon: 'üöÄ',
        date: '2024',
        technologies: ['Vue.js', 'Vue Router', 'Pinia', 'Tailwind CSS', 'Vite'],
        featured: true,
        details: {
          client: 'Personal',
          duration: '1 mes',
          technologies: ['Vue.js 3', 'Vue Router', 'Pinia (Vuex)', 'Tailwind CSS', 'Vite', 'ES6+'],
          challenges: [
            'Dise√±o responsive para m√∫ltiples dispositivos',
            'Animaciones fluidas sin afectar performance',
            'SEO optimization',
            'Accesibilidad web'
          ],
          solution: 'Aplicaci√≥n Single Page Application (SPA) con routing din√°mico, gesti√≥n de estado centralizada y dise√±o mobile-first.',
          results: [
            '100% responsive en todos los dispositivos',
            'Performance score 95+ en Lighthouse',
            'Animatividades fluidas 60fps',
            'SEO optimizado con meta tags'
          ],
          gallery: []
        }
      },
      {
        id: 'breaking-bad-frontend',
        title: 'Breaking Bad Character App',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n web para explorar personajes de Breaking Bad, desarrollada con JavaScript vanilla y consumo de APIs REST.',
        icon: 'üß™',
        date: '2023',
        technologies: ['JavaScript', 'HTML5', 'CSS3', 'REST API'],
        featured: false,
        details: {
          client: 'Proyecto Acad√©mico',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'HTML5', 'CSS3', 'REST API', 'Async/Await'],
          challenges: [
            'Manejo as√≠ncrono de datos',
            'Control de errores en llamadas API',
            'Filtrado y b√∫squeda de personajes'
          ],
          solution: 'Implementaci√≥n de fetch API con async/await, manejo de errores con try-catch y algoritmo de b√∫squeda eficiente.',
          results: [
            'Carga r√°pida de datos',
            'Experiencia de usuario fluida',
            'B√∫squeda instant√°nea'
          ]
        }
      },
      {
        id: 'inmobiliaria-app',
        title: 'Sistema de Inmobiliaria',
        category: 'Full Stack',
        description: 'Sistema para gesti√≥n de propiedades inmobiliarias con b√∫squeda avanzada, filtros y visualizaci√≥n en mapa.',
        icon: 'üè†',
        date: '2023',
        technologies: ['JavaScript', 'HTML', 'CSS', 'REST API', 'Local Storage'],
        featured: false,
        details: {
          client: 'Proyecto Acad√©mico',
          duration: '3 semanas',
          technologies: ['JavaScript', 'HTML5', 'CSS3', 'Local Storage API', 'Geolocalizaci√≥n'],
          challenges: [
            'Persistencia de datos',
            'Filtros complejos',
            'Geolocalizaci√≥n'
          ],
          solution: 'Aplicaci√≥n con almacenamiento local para favoritos y preferencias, sistema de filtros din√°micos y integraci√≥n con mapas.',
          results: [
            'B√∫squeda avanzada implementada',
            'Sistema de favoritos funcional',
            'Optimizaci√≥n de cargas'
          ]
        }
      },
      {
        id: 'media-queries-challenge',
        title: 'Desaf√≠o Responsive Design',
        category: 'Frontend Development',
        description: 'Ejercicio de maquetaci√≥n responsive con diferentes breakpoints y enfoque mobile-first.',
        icon: 'üì±',
        date: '2023',
        technologies: ['HTML5', 'CSS3', 'Media Queries', 'Flexbox', 'Grid'],
        featured: false,
        details: {
          client: 'Proyecto Acad√©mico UNAB',
          duration: '1 semana',
          technologies: ['HTML5', 'CSS3', 'Media Queries', 'Flexbox', 'CSS Grid'],
          challenges: [
            'Adaptabilidad a m√∫ltiples tama√±os de pantalla',
            'Breakpoints consistentes',
            'Im√°genes responsive'
          ],
          solution: 'Enfoque mobile-first con media queries progresivas y uso de unidades relativas (rem, em, %).',
          results: [
            'Funcionamiento perfecto en m√≥viles',
            'Adaptabilidad a tablets y desktop',
            'Mejoras en UX'
          ]
        }
      },
      {
        id: 'desafio-3-5-isabel-palacios',
        title: 'Desaf√≠o 3.5 - UNAB',
        category: 'Frontend Development',
        description: 'Proyecto acad√©mico de la Universidad Andr√©s Bello desarrollando funcionalidades avanzadas de JavaScript y manipulaci√≥n del DOM.',
        icon: '‚ú®',
        date: '2024',
        technologies: ['JavaScript', 'HTML5', 'CSS3', 'DOM Manipulation'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'HTML5', 'CSS3', 'DOM API', 'Event Handlers'],
          challenges: [
            'Manipulaci√≥n avanzada del DOM',
            'Manejo de eventos complejos',
            'Optimizaci√≥n de performance',
            'Validaci√≥n de formularios'
          ],
          solution: 'Implementaci√≥n de t√©cnicas modernas de JavaScript incluyendo async/await, Promises y manipulaci√≥n eficiente del DOM.',
          results: [
            'Funcionalidades interactivas completas',
            'C√≥digo limpio y mantenible',
            'Excelente performance',
            'Buena experiencia de usuario'
          ]
        }
      },
      {
        id: 'desafio-mediaquieris-isabel',
        title: 'Desaf√≠o Media Queries - UNAB',
        category: 'Frontend Development',
        description: 'Implementaci√≥n de dise√±o responsive avanzado utilizando media queries para diferentes dispositivos, proyecto acad√©mico UNAB.',
        icon: 'üìê',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'Media Queries', 'Flexbox'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '1 semana',
          technologies: ['HTML5', 'CSS3', 'Media Queries', 'Flexbox', 'Responsive Design'],
          challenges: [
            'Breakpoints m√∫ltiples y consistentes',
            'Adaptaci√≥n de layout complejo',
            'Im√°genes responsivas',
            'Tipograf√≠a escalable'
          ],
          solution: 'Enfoque mobile-first con media queries que cubren m√≥vil, tablet y desktop, usando unidades relativas y t√©cnicas modernas de CSS.',
          results: [
            '100% responsive en todos los dispositivos',
            'Performance √≥ptima',
            'Layout flexible',
            'C√≥digo escalable'
          ]
        }
      },
      {
        id: 'frontend-breakingbad',
        title: 'Breaking Bad API - Frontend',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n frontend para explorar personajes de Breaking Bad consumiendo API REST externa. Implementaci√≥n de b√∫squeda, filtros y visualizaci√≥n de datos.',
        icon: 'üß™',
        date: '2023',
        technologies: ['JavaScript', 'REST API', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto Acad√©mico',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'Fetch API', 'Async/Await', 'HTML5', 'CSS3'],
          challenges: [
            'Consumo as√≠ncrono de API REST',
            'Manejo de errores en llamadas API',
            'B√∫squeda y filtrado en tiempo real',
            'Renderizado din√°mico de datos'
          ],
          solution: 'Implementaci√≥n de Fetch API con async/await, manejo de errores con try-catch, algoritmo de b√∫squeda eficiente y renderizado din√°mico con templates.',
          results: [
            'Carga r√°pida de datos desde API',
            'B√∫squeda instant√°nea de personajes',
            'Experiencia de usuario fluida',
            'Manejo robusto de errores'
          ]
        }
      },
      {
        id: 'inmobiliaria-system',
        title: 'Sistema Inmobiliario',
        category: 'Full Stack Development',
        description: 'Sistema completo para gesti√≥n de propiedades inmobiliarias con b√∫squeda avanzada, sistema de favoritos y persistencia en Local Storage.',
        icon: 'üè†',
        date: '2023',
        technologies: ['JavaScript', 'Local Storage', 'REST API', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto Acad√©mico',
          duration: '3 semanas',
          technologies: ['JavaScript', 'Local Storage API', 'Geolocalizaci√≥n', 'HTML5', 'CSS3'],
          challenges: [
            'Persistencia de datos sin backend',
            'Filtros complejos m√∫ltiples',
            'Sistema de favoritos funcional',
            'Integraci√≥n con servicios de geolocalizaci√≥n'
          ],
          solution: 'Uso de Local Storage para persistencia de datos, sistema de filtros din√°micos combinados, gesti√≥n de estado del favorito y integraci√≥n con mapas mediante APIs.',
          results: [
            'B√∫squeda avanzada implementada',
            'Sistema de favoritos completamente funcional',
            'Datos persistentes entre sesiones',
            'Integraci√≥n exitosa con mapas'
          ]
        }
      },
      {
        id: 'introduccion-informatica',
        title: 'Introducci√≥n a la Inform√°tica',
        category: 'Academic Project',
        description: 'Proyecto educativo sobre conceptos fundamentales de inform√°tica y computaci√≥n, desarrollado como ejercicio de Digital House.',
        icon: 'üíª',
        date: '2023',
        technologies: ['HTML', 'CSS', 'JavaScript'],
        featured: false,
        details: {
          client: 'Digital House',
          duration: '1 mes',
          technologies: ['HTML5', 'CSS3', 'JavaScript', 'Git'],
          challenges: [
            'Organizaci√≥n de contenido educativo',
            'Presentaci√≥n clara de conceptos',
            'Interactividad para aprendizaje'
          ],
          solution: 'Desarrollo de interfaz intuitiva para explicar conceptos b√°sicos de inform√°tica con ejemplos interactivos.',
          results: [
            'Contenido educativo bien estructurado',
            'Interfaz clara y accesible',
            'Material de aprendizaje efectivo'
          ]
        }
      },
      {
        id: 'desafio-dom-avanzado',
        title: 'Desaf√≠o DOM Avanzado - UNAB',
        category: 'Frontend Development',
        description: 'Proyecto acad√©mico avanzado sobre manipulaci√≥n del DOM y desarrollo de interfaces interactivas con JavaScript moderno.',
        icon: 'üéØ',
        date: '2024',
        technologies: ['JavaScript', 'HTML5', 'CSS3', 'DOM API'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'DOM API', 'Event Listeners', 'HTML5', 'CSS3'],
          challenges: [
            'Manipulaci√≥n eficiente del DOM',
            'Gesti√≥n de eventos m√∫ltiples',
            'Optimizaci√≥n de renderizado',
            'Validaci√≥n de formularios din√°micos'
          ],
          solution: 'Implementaci√≥n de t√©cnicas modernas de JavaScript para manipular el DOM eficientemente, usando event delegation y t√©cnicas de performance optimization.',
          results: [
            'C√≥digo optimizado y performante',
            'Interactividad fluida',
            'Buena experiencia de usuario',
            'Seguimiento de mejores pr√°cticas'
          ]
        }
      },
      {
        id: 'desafio-api-avanzado',
        title: 'Desaf√≠o API Avanzado - UNAB',
        category: 'Frontend Development',
        description: 'Consumo avanzado de APIs REST con manejo de errores, carga as√≠ncrona y optimizaci√≥n de requests. Proyecto acad√©mico UNAB.',
        icon: 'üîå',
        date: '2024',
        technologies: ['JavaScript', 'Fetch API', 'Async/Await', 'REST'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'Fetch API', 'Async/Await', 'Error Handling', 'REST'],
          challenges: [
            'Manejo as√≠ncrono de m√∫ltiples requests',
            'Gesti√≥n de errores robusta',
            'Optimizaci√≥n de carga de datos',
            'Cache de informaci√≥n'
          ],
          solution: 'Implementaci√≥n de async/await con manejo de errores try-catch, debouncing para b√∫squedas, y sistema de cache con localStorage.',
          results: [
            'Aplicaci√≥n robusta y sin errores',
            'Performance optimizado',
            'Experiencia de usuario excelente',
            'C√≥digo escalable'
          ]
        }
      },
      {
        id: 'musica-app',
        title: 'Aplicaci√≥n de M√∫sica',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n para explorar m√∫sica, artistas y √°lbumes con b√∫squeda avanzada y reproductor integrado.',
        icon: 'üéµ',
        date: '2024',
        technologies: ['JavaScript', 'HTML5', 'CSS3', 'Audio API'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '2 semanas',
          technologies: ['JavaScript', 'HTML5 Audio API', 'CSS3', 'DOM Manipulation'],
          challenges: [
            'Integraci√≥n de reproductor de audio',
            'Sincronizaci√≥n de controles',
            'Dise√±o responsive del reproductor',
            'Gesti√≥n de playlist'
          ],
          solution: 'Desarrollo de reproductor de m√∫sica personalizado con controles HTML5, gesti√≥n de playlists y interfaz intuitiva y moderna.',
          results: [
            'Reproductor funcional y est√©tico',
            'Controles intuitivos',
            'Experiencia de usuario agradable',
            'Performance √≥ptimo'
          ]
        }
      },
      {
        id: 'desafio-js-moderno',
        title: 'Desaf√≠o JavaScript Moderno - UNAB',
        category: 'Frontend Development',
        description: 'Proyecto demostrativo de las capacidades de JavaScript moderno: ES6+, closures, promises, async/await y patrones avanzados.',
        icon: '‚ö°',
        date: '2024',
        technologies: ['JavaScript ES6+', 'Promises', 'Async/Await'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'Promises', 'Async/Await', 'Closures', 'Modules'],
          challenges: [
            'Uso avanzado de Promises',
            'Manejo de async/await',
            'Implementaci√≥n de m√≥dulos ES6',
            'Patrones de dise√±o JavaScript'
          ],
          solution: 'Desarrollo de aplicaci√≥n demostrativa usando las caracter√≠sticas m√°s modernas de JavaScript incluyendo destructuring, spread operator, arrow functions y m√°s.',
          results: [
            'C√≥digo moderno y mantenible',
            'Uso de mejores pr√°cticas',
            'Performance optimizado',
            'Arquitectura escalable'
          ]
        }
      },
      {
        id: 'desafio-responsive-avanzado',
        title: 'Desaf√≠o Responsive Avanzado - UNAB',
        category: 'Frontend Development',
        description: 'Maquetaci√≥n avanzada responsive con t√©cnicas modernas: Grid, Flexbox, Container Queries y dise√±o mobile-first.',
        icon: 'üì±',
        date: '2024',
        technologies: ['CSS3', 'Flexbox', 'Grid', 'Media Queries'],
        featured: true,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '1 semana',
          technologies: ['CSS Grid', 'Flexbox', 'Media Queries', 'Container Queries', 'Viewport Units'],
          challenges: [
            'Layout complejo responsive',
            'Uso avanzado de Grid y Flexbox',
            'Optimizaci√≥n para todos los dispositivos',
            'Transiciones fluidas'
          ],
          solution: 'Implementaci√≥n de layout moderno usando Grid para estructura principal y Flexbox para componentes, con queries para diferentes dispositivos.',
          results: [
            '100% responsive',
            'Layout moderno y profesional',
            'Transiciones fluidas',
            'Performance √≥ptimo'
          ]
        }
      },
      {
        id: 'pulga-store',
        title: 'Pulga Store - E-commerce Venezolano',
        category: 'Full Stack Development',
        description: 'Tienda ficticia de comida venezolana con cat√°logo completo, carrito de compras, seguimiento de pedidos y galer√≠a de experiencias. Proyecto evaluativo del m√≥dulo 2 Frontend.',
        icon: 'üáªüá™',
        date: '2024',
        technologies: ['JavaScript', 'Bootstrap', 'jQuery', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto Evaluaci√≥n Final M√≥dulo 2',
          duration: '1 mes',
          technologies: ['HTML5', 'CSS3', 'JavaScript ES6', 'Bootstrap 5', 'jQuery', 'DataTables', 'Fancybox'],
          challenges: [
            'Carrito de compras din√°mico solo frontend',
            'Seguimiento de pedidos con DataTables',
            'Galer√≠a de experiencias con Fancybox y Carousel',
            'Formulario de contacto con validaci√≥n',
            'Dise√±o responsive con Bootstrap'
          ],
          solution: 'Desarrollo de e-commerce completo desde cero usando Bootstrap para layout responsivo, jQuery para interactividad, DataTables para tablas din√°micas y Fancybox para galer√≠a visual.',
          results: [
            'E-commerce funcional completamente frontend',
            'Interfaz intuitiva y atractiva',
            '100% responsive en todos los dispositivos',
            'Carrito de compras din√°mico',
            'Experiencia visual con galer√≠a'
          ],
          link: 'https://github.com/zuki2610/pulga-store'
        }
      },
      {
        id: 'telovendo-collaborative',
        title: 'TeloVendo - Proyecto Colaborativo',
        category: 'Frontend Development',
        description: 'Replicaci√≥n fiel de dise√±o Figma con 4 p√°ginas completas. Proyecto colaborativo utilizando √∫nicamente HTML y CSS puro, sin frameworks.',
        icon: 'üé®',
        date: '2024',
        technologies: ['HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'UNAB - Trabajo Colaborativo',
          duration: '2 semanas',
          technologies: ['HTML5', 'CSS3'],
          challenges: [
            'Replicar exactamente dise√±o de Figma',
            'Trabajo colaborativo con 4 integrantes',
            'Sin frameworks, solo HTML y CSS puro',
            'Consistencia visual entre p√°ginas'
          ],
          solution: 'Divisi√≥n del trabajo en 4 p√°ginas: Home (Isabel), Catalog (Valentina), Detail (Franco) y About Us (Christopher). Desarrollo 100% en HTML y CSS vanilla.',
          results: [
            '4 p√°ginas replicadas fielmente',
            'Dise√±o consistente y profesional',
            'Trabajo colaborativo exitoso',
            'C√≥digo limpio sin dependencias'
          ],
          link: 'https://github.com/zuki2610/telovendo'
        }
      },
      {
        id: 'frontend-E1',
        title: 'Frontend Ejercicio 1 - Colaborativo',
        category: 'Frontend Development',
        description: 'Ejercicio de frontend trabajado colaborativamente con Valentina Troncoso y Franco Giaverini para UNAB.',
        icon: 'ü§ù',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'JavaScript'],
        featured: false,
        details: {
          client: 'UNAB - Universidad Andr√©s Bello',
          duration: '1 semana',
          technologies: ['HTML5', 'CSS3', 'JavaScript'],
          challenges: [
            'Trabajo en equipo colaborativo',
            'Coordinar desarrollo entre integrantes',
            'Mantener consistencia de c√≥digo'
          ],
          solution: 'Desarrollo colaborativo usando Git y GitHub para coordinaci√≥n entre Isabel Palacios, Valentina Troncoso y Franco Giaverini.',
          results: [
            'Proyecto colaborativo exitoso',
            'Coordinaci√≥n efectiva de equipo',
            'C√≥digo bien organizado'
          ],
          link: 'https://github.com/vichiPaz/frontend-E1'
        }
      },
      {
        id: 'isabellas-bakery',
        title: 'Isabella\'s Bakery',
        category: 'Frontend Development',
        description: 'Sitio web de panader√≠a con dise√±o atractivo y funcionalidades interactivas.',
        icon: 'üç∞',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'JavaScript'],
        featured: true,
        details: {
          client: 'Proyecto Personal',
          duration: '2 semanas',
          technologies: ['HTML5', 'CSS3', 'JavaScript'],
          challenges: [
            'Dise√±o atractivo para panader√≠a',
            'Interfaz intuitiva',
            'Responsive design'
          ],
          solution: 'Desarrollo de sitio web completo para panader√≠a con cat√°logo de productos y dise√±o moderno.',
          results: [
            'Sitio web funcional',
            'Dise√±o atractivo',
            'Experiencia de usuario positiva'
          ],
          link: 'https://github.com/zuki2610/isabellasbakery'
        }
      },
      {
        id: 'isabellas-fashion',
        title: 'Isabella\'s Fashion',
        category: 'Frontend Development',
        description: 'Tienda de moda con dise√±o elegante y moderno para mostrar productos de fashion.',
        icon: 'üëó',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'JavaScript'],
        featured: true,
        details: {
          client: 'Proyecto Personal',
          duration: '2 semanas',
          technologies: ['HTML5', 'CSS3', 'JavaScript'],
          challenges: [
            'Dise√±o elegante y moderno',
            'Presentaci√≥n de productos fashion',
            'Galer√≠a de im√°genes atractiva'
          ],
          solution: 'Desarrollo de e-commerce de moda con interfaz elegante y moderna para presentar productos de fashion.',
          results: [
            'Sitio web funcional',
            'Dise√±o elegante',
            'Experiencia visual atractiva'
          ],
          link: 'https://github.com/zuki2610/IsabellasFashion'
        }
      },
      {
        id: 'isabellas-music',
        title: 'Isabella\'s Music',
        category: 'Frontend Development',
        description: 'Sitio web musical con galer√≠a de artistas, √°lbumes y reproductor integrado.',
        icon: 'üéµ',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'JavaScript'],
        featured: true,
        details: {
          client: 'Proyecto Personal',
          duration: '2 semanas',
          technologies: ['HTML5', 'CSS3', 'JavaScript'],
          challenges: [
            'Integraci√≥n de audio',
            'Galer√≠a de artistas',
            'Reproductor funcional'
          ],
          solution: 'Desarrollo de sitio web musical con galer√≠a de artistas, √°lbumes y funciones de audio integradas.',
          results: [
            'Sitio web musical funcional',
            'Reproductor integrado',
            'Experiencia musical completa'
          ],
          link: 'https://github.com/zuki2610/Isabella-s-Music'
        }
      },
      {
        id: 'tech-design-solution',
        title: 'Tech Design Solution',
        category: 'Frontend Development',
        description: 'Soluci√≥n tecnol√≥gica con enfoque en dise√±o moderno y funcionalidades avanzadas.',
        icon: 'üíª',
        date: '2024',
        technologies: ['HTML5', 'CSS3', 'JavaScript'],
        featured: true,
        details: {
          client: 'Proyecto Personal',
          duration: '2 semanas',
          technologies: ['HTML5', 'CSS3', 'JavaScript'],
          challenges: [
            'Dise√±o tecnol√≥gico moderno',
            'Funcionalidades avanzadas',
            'Interfaz intuitiva'
          ],
          solution: 'Desarrollo de soluci√≥n tecnol√≥gica con dise√±o moderno y funcionalidades avanzadas.',
          results: [
            'Soluci√≥n tecnol√≥gica funcional',
            'Dise√±o moderno',
            'Experiencia de usuario √≥ptima'
          ],
          link: 'https://github.com/zuki2610/TechDesignSolution'
        }
      },
      {
        id: 'js-taskmaster',
        title: 'JS TaskMaster',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n de gesti√≥n de tareas desarrollada con JavaScript puro, demostrando manejo del DOM y programaci√≥n funcional.',
        icon: '‚úÖ',
        date: '2024',
        technologies: ['JavaScript', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto UNAB',
          duration: '2 semanas',
          technologies: ['JavaScript ES6+', 'HTML5', 'CSS3', 'Local Storage'],
          challenges: [
            'CRUD de tareas sin frameworks',
            'Persistencia con Local Storage',
            'Manipulaci√≥n avanzada del DOM',
            'Gesti√≥n de estado manual'
          ],
          solution: 'Desarrollo de aplicaci√≥n de gesti√≥n de tareas usando JavaScript vanilla, Local Storage para persistencia y manipulaci√≥n del DOM.',
          results: [
            'Aplicaci√≥n completamente funcional',
            'Gesti√≥n de tareas completa',
            'Persistencia de datos',
            'C√≥digo limpio y organizado'
          ],
          link: 'https://github.com/zuki2610/jstaskmaster'
        }
      },
      {
        id: 'vue-projects',
        title: 'Proyectos Vue.js',
        category: 'Frontend Development',
        description: 'Colecci√≥n de proyectos desarrollados con Vue.js, explorando el framework progresivo y sus funcionalidades.',
        icon: '‚ö°',
        date: '2024',
        technologies: ['Vue.js', 'JavaScript', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto Acad√©mico',
          duration: '1 mes',
          technologies: ['Vue.js', 'JavaScript ES6+', 'HTML5', 'CSS3'],
          challenges: [
            'Aprender Vue.js desde cero',
            'Componentes reutilizables',
            'Gesti√≥n de estado con Vue',
            'Routing con Vue Router'
          ],
          solution: 'Desarrollo de m√∫ltiples proyectos con Vue.js explorando componentes, props, emit, computed properties y m√°s.',
          results: [
            'Dominio de Vue.js',
            'Proyectos funcionales',
            'Arquitectura basada en componentes',
            'Best practices implementadas'
          ],
          link: 'https://github.com/zuki2610/vue'
        }
      },
      {
        id: 'pokemones',
        title: 'PokeApp - Colaborativo',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n de Pok√©mon desarrollada colaborativamente con Christopher Guala, consumiendo API de Pok√©mon.',
        icon: '‚ö°',
        date: '2024',
        technologies: ['JavaScript', 'REST API', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'UNAB - Trabajo Colaborativo',
          duration: '2 semanas',
          technologies: ['JavaScript', 'REST API', 'HTML5', 'CSS3'],
          challenges: [
            'Consumo de API de Pok√©mon',
            'Trabajo colaborativo en Git',
            'Visualizaci√≥n de datos',
            'Dise√±o atractivo'
          ],
          solution: 'Desarrollo colaborativo de aplicaci√≥n de Pok√©mon consumiendo PokeAPI, con interfaz atractiva y funcional.',
          results: [
            'Aplicaci√≥n funcional',
            'Datos de API integrados',
            'Trabajo colaborativo exitoso',
            'Interfaz atractiva'
          ],
          link: 'https://github.com/christopherguala/pokemones'
        }
      },
      {
        id: 'pokepoke',
        title: 'PokePoke - Explorador de Pok√©mon',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n para explorar y buscar informaci√≥n sobre Pok√©mon, desarrollada con JavaScript y consumo de API REST.',
        icon: '‚ö°',
        date: '2024',
        technologies: ['JavaScript', 'REST API', 'HTML5', 'CSS3'],
        featured: false,
        details: {
          client: 'Proyecto Personal',
          duration: '1 semana',
          technologies: ['JavaScript', 'REST API', 'HTML5', 'CSS3'],
          challenges: [
            'Integraci√≥n con PokeAPI',
            'B√∫squeda de Pok√©mon',
            'Visualizaci√≥n de estad√≠sticas'
          ],
          solution: 'Desarrollo de aplicaci√≥n de Pokemon con integraci√≥n de API para b√∫squeda y visualizaci√≥n de informaci√≥n.',
          results: [
            'Aplicaci√≥n funcional',
            'API integrada exitosamente',
            'B√∫squeda y visualizaci√≥n de datos'
          ],
          link: 'https://github.com/zuki2610/pokepoke'
        }
      },
      {
        id: 'vuestarurant',
        title: 'Vue Restaurant',
        category: 'Frontend Development',
        description: 'Aplicaci√≥n de restaurante desarrollada con Vue.js, demostrando gesti√≥n de estado, componentes y routing.',
        icon: 'üçΩÔ∏è',
        date: '2024',
        technologies: ['Vue.js', 'JavaScript', 'HTML5', 'CSS3'],
        featured: true,
        details: {
          client: 'Proyecto UNAB',
          duration: '3 semanas',
          technologies: ['Vue.js', 'Vue Router', 'JavaScript ES6+', 'HTML5', 'CSS3'],
          challenges: [
            'Gesti√≥n de men√∫ con Vue',
            'Routing entre p√°ginas',
            'Gesti√≥n de estado del pedido',
            'Componentes reutilizables'
          ],
          solution: 'Desarrollo de aplicaci√≥n de restaurante completa con Vue.js, incluyendo gesti√≥n de men√∫, carrito y checkout.',
          results: [
            'Aplicaci√≥n Vue.js completa',
            'Routing implementado',
            'Gesti√≥n de estado funcional',
            'Componentes reutilizables'
          ],
          link: 'https://github.com/zuki2610/vuestarurant'
        }
      }
    ]
  }),
  
  getters: {
    /**
     * Obtiene todos los proyectos almacenados
     * @returns {Array} Array completo de proyectos
     */
    getAllProjects: (state) => state.projects,
    
    /**
     * Obtiene solo los proyectos destacados (featured)
     * GETTER COMPUESTO: Filtra y retorna proyectos destacados
     * @returns {Array} Proyectos con featured: true
     */
    getFeaturedProjects: (state) => {
      return state.projects.filter(project => project.featured)
    },
    
    /**
     * Busca un proyecto por su ID
     * @param {string} id - ID del proyecto
     * @returns {Object|undefined} Proyecto encontrado o undefined
     */
    getProjectById: (state) => {
      return (id) => state.projects.find(project => project.id === id)
    },
    
    /**
     * Obtiene proyectos por categor√≠a
     * GETTER COMPUESTO: Filtra proyectos por categor√≠a espec√≠fica
     * @param {string} category - Categor√≠a a filtrar
     * @returns {Array} Proyectos de la categor√≠a especificada
     */
    getProjectsByCategory: (state) => {
      return (category) => state.projects.filter(project => project.category === category)
    },
    
    /**
     * GETTER COMPUESTO: Cuenta total de proyectos
     * @returns {number} Total de proyectos
     */
    getTotalProjectsCount: (state) => state.projects.length,
    
    /**
     * GETTER COMPUESTO: Cuenta proyectos por categor√≠a
     * @returns {Object} Objeto con conteo de proyectos por categor√≠a
     */
    getProjectsCountByCategory: (state) => {
      const countByCategory = {}
      state.projects.forEach(project => {
        const { category } = project
        countByCategory[category] = (countByCategory[category] || 0) + 1
      })
      return countByCategory
    },
    
    /**
     * GETTER COMPUESTO: Obtiene todas las categor√≠as √∫nicas
     * @returns {Array} Array de categor√≠as √∫nicas
     */
    getAllCategories: (state) => {
      return [...new Set(state.projects.map(project => project.category))]
    },
    
    /**
     * GETTER COMPUESTO: Verifica si hay proyectos cargados
     * @returns {boolean} True si hay proyectos
     */
    hasProjects: (state) => state.projects.length > 0,
    
    /**
     * GETTER COMPUESTO: Obtiene proyectos recientes (√∫ltimos N)
     * @param {number} limit - N√∫mero de proyectos a retornar
     * @returns {Array} Proyectos m√°s recientes
     */
    getRecentProjects: (state) => {
      return (limit = 3) => state.projects.slice(0, limit)
    }
  },
  
  actions: {
    /**
     * Acci√≥n PRINCIPAL: Carga proyectos desde la API externa
     * BUENA PR√ÅCTICA: Todo el manejo de datos est√° encapsulado en el store
     * @returns {Promise<void>}
     */
    async loadProjects() {
      // Si ya est√° cargando, evitar llamadas duplicadas
      if (this.loading) {
        console.log('Ya existe una carga en progreso')
        return
      }
      
      this.loading = true
      this.error = null
      
      try {
        // Intentar cargar desde la API
        const projects = await fetchProjects()
        
        // Validaci√≥n robusta de la respuesta
        if (!projects) {
          throw new Error('La API no retorn√≥ datos')
        }
        
        // Verificar si es un array v√°lido
        if (!Array.isArray(projects)) {
          throw new Error('La API retorn√≥ un formato de datos inv√°lido')
        }
        
        // Si la API no tiene datos o est√° vac√≠a, mantener datos locales
        if (projects.length === 0) {
          console.log('API retorn√≥ array vac√≠o, usando datos locales')
          return
        }
        
        // Validar estructura de datos
        const validProjects = projects.filter(project => {
          return project && 
                 project.id && 
                 project.title && 
                 project.description &&
                 Array.isArray(project.technologies)
        })
        
        if (validProjects.length === 0) {
          console.warn('API retorn√≥ datos sin estructura v√°lida')
          this.error = 'La API retorn√≥ datos con formato incorrecto'
          return
        }
        
        // Actualizar con datos de la API solo si son v√°lidos
        this.projects = validProjects
        console.log(`Proyectos cargados exitosamente desde la API (${validProjects.length} proyectos)`)
        
      } catch (error) {
        console.error('Error al cargar proyectos desde API:', error)
        
        // Manejo espec√≠fico de diferentes tipos de errores
        if (error.name === 'TypeError') {
          this.error = 'Error de conexi√≥n con el servidor'
        } else if (error.status === 404) {
          this.error = 'Endpoint de API no encontrado'
        } else if (error.status === 500) {
          this.error = 'Error interno del servidor'
        } else if (error.message?.includes('fetch')) {
          this.error = 'Error de red. No se pudo conectar al servidor'
        } else {
          this.error = error.message || 'Error desconocido al cargar proyectos'
        }
        
        // En caso de error, mantener los datos locales existentes
        console.log('Usando datos locales como fallback debido a error en API')
      } finally {
        this.loading = false
      }
    },
    
    /**
     * Carga un proyecto espec√≠fico por ID desde la API
     * @param {string} id - ID del proyecto a cargar
     * @returns {Object|null} Proyecto encontrado o null
     */
    async loadProjectById(id) {
      if (!id) {
        console.error('loadProjectById: ID no proporcionado')
        return null
      }
      
      try {
        const project = await fetchProjectById(id)
        
        // Validar que el proyecto existe y tiene estructura v√°lida
        if (!project) {
          console.log('Proyecto no encontrado en API, buscando en datos locales')
          return this.getProjectById(id)
        }
        
        // Validar estructura del proyecto
        if (!project.id || !project.title) {
          console.warn('Proyecto de API tiene estructura inv√°lida')
          return this.getProjectById(id)
        }
        
        return project
        
      } catch (error) {
        console.error('Error al cargar proyecto espec√≠fico:', error)
        
        // Fallback a datos locales
        const localProject = this.getProjectById(id)
        if (localProject) {
          console.log('Retornando proyecto desde datos locales')
          return localProject
        }
        
        // Si no existe en datos locales tampoco
        this.error = `No se pudo cargar el proyecto con ID: ${id}`
        return null
      }
    },
    
    /**
     * Resetea el estado de error del store
     */
    clearError() {
      this.error = null
    },
    
    /**
     * Fuerza recarga de proyectos desde la API
     * BUENA PR√ÅCTICA: M√©todo de refresh expl√≠cito
     */
    async refreshProjects() {
      console.log('Refrescando proyectos desde la API...')
      await this.loadProjects()
    },
    
    /**
     * BUENA PR√ÅCTICA: CRUD Actions - Agregar un nuevo proyecto
     * @param {Object} project - Proyecto a agregar
     */
    addProject(project) {
      // Validar estructura
      if (!project?.id || !project?.title) {
        console.error('Proyecto inv√°lido: falta id o title')
        return false
      }
      
      // Verificar duplicados
      if (this.projects.some(p => p.id === project.id)) {
        console.warn(`Proyecto con ID ${project.id} ya existe`)
        return false
      }
      
      // Agregar proyecto
      this.projects.push(project)
      console.log(`Proyecto ${project.title} agregado exitosamente`)
      return true
    },
    
    /**
     * BUENA PR√ÅCTICA: CRUD Actions - Actualizar un proyecto existente
     * @param {string} id - ID del proyecto
     * @param {Object} updates - Campos a actualizar
     */
    updateProject(id, updates) {
      const index = this.projects.findIndex(p => p.id === id)
      
      if (index === -1) {
        console.warn(`No se encontr√≥ proyecto con ID: ${id}`)
        return false
      }
      
      // Actualizar proyecto manteniendo inmutabilidad
      this.projects[index] = { ...this.projects[index], ...updates }
      console.log(`Proyecto ${id} actualizado exitosamente`)
      return true
    },
    
    /**
     * BUENA PR√ÅCTICA: CRUD Actions - Eliminar un proyecto
     * @param {string} id - ID del proyecto a eliminar
     */
    deleteProject(id) {
      const index = this.projects.findIndex(p => p.id === id)
      
      if (index === -1) {
        console.warn(`No se encontr√≥ proyecto con ID: ${id}`)
        return false
      }
      
      this.projects.splice(index, 1)
      console.log(`Proyecto ${id} eliminado exitosamente`)
      return true
    },
    
    /**
     * BUENA PR√ÅCTICA: Helper - Resetea el store a valores iniciales
     */
    resetStore() {
      this.loading = false
      this.error = null
      console.log('Store reseteado')
    }
  }
})

